@page
@model Materials.Index2Model

@{
    ViewData["Title"] = "Index2";
    // var nestedGroup = (dynamic)ViewData["NestedGroup"];
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            @* <th></th> *@
            <th align="left">
                @Html.DisplayNameFor(model => model.MaterialMovimientosVMs[0].AlmName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MaterialMovimientosVMs[0].MatBalance)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MaterialMovimientosVMs[0].MatUM)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>

            @foreach(var outerGroup in Model.MaterialMovimientosVMs.GroupBy(g => g.MatName).ToList())
            {
                <tr >
                    <td align="left" class="fw-bold">
                        @Html.DisplayFor(modelItem => outerGroup.Key)
                        <span>....Total Material is: @Model.MaterialMovimientosVMs.Where(w => w.MatName == outerGroup.Key).Select(outerGroup => outerGroup.AlmQ).FirstOrDefault()</span>

                    </td>
                </tr>

                foreach(var innerGroup in outerGroup.ToList())
                {
                    <tr>
                        <td align="left">
                            @Html.DisplayFor(modelItem => innerGroup.AlmName)
                        </td>
                        <td align="left">
                            @Html.DisplayFor(modelItem => innerGroup.MatBalance)
                        </td>
                        <td align="left">
                            @Html.DisplayFor(modelItem => innerGroup.MatUM)
                        </td>
                        <td>
                            <a asp-page="./Details" asp-route-id="@innerGroup.MatId" asp-route-almId="@innerGroup.AlmId">Details</a> 
                        </td>

                    </tr>
                }

            }

    </tbody>
</table>
